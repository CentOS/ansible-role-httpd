# This task is more or less equivalent to vhost-www except that it also renders (through podman) website content
# Once done, it will push to other nodes rendered website (through specific keys allowed on web nodes

- import_role:
    name: httpd
    tasks_from: pki-tls
  vars:
    pki_hostname: www.stg.centos.org

- name: Ensuring that scponly is installed for specific shell
  yum:
    name: rssh
    state: installed

- name: Ensuring some protocols are allowed through rssh
  blockinfile:
    path: /etc/rssh.conf
    block: |
      allowscp
      allowsftp
      allowrsync

- name: Default umask for rssh push
  lineinfile:
    path: /etc/rssh.conf
    regexp: '^umask =' 
    line: 'umask = 002'
    state: present

- name: Adding specific webcontent user and restricted shell
  user: 
    name: '{{ item.login_name }}' 
    state: present 
    comment: CentOS Web content user
    groups: rsshusers
    append: True
    shell: /bin/rssh
  with_items: "{{ httpd_www_push_users }}"  
  
- name: Importing local users ssh pub keys
  authorized_key: 
    user: '{{ item.0.login_name }}' 
    key: "{{ item.1 }}"
  with_subelements: 
    - '{{ httpd_www_push_users }}'  
    - ssh_pub_keys

- name: Ensuring we have a DocumentRoot
  file:
    path: "/var/www/centos_website/"
    state: directory
    owner: '{{ item.login_name }}'
    group: '{{ item.login_name }}'
    mode: 0775
  with_items: "{{ httpd_www_push_users }}"  


- name: Configuring httpd vhost for www
  template:
    src: "{{ item }}.j2"
    dest: "/etc/httpd/conf.d/{{ item }}"
    mode: 0644
  with_items:
    - 02_vhost-www.conf
    - ssl-vhost-www.conf
  notify:
    - reload_httpd
  tags:
    - config

- name: Script to gather dynamic content
  template:
    src: www/content-download.sh.j2
    dest: /usr/libexec/centos/content-download.sh
    mode: 0755
  tags:
    - cron

- name: Cron to gather content
  cron:
    name: Gathering rss and csv files for website
    job: /usr/libexec/centos/content-download.sh
    minute: "*/5"
  tags:
    - cron

- name: Install some tools to render website locally
  yum:
    name: ['podman', 'git']
    state: installed

- name: Enabling needed selinux booleans
  seboolean:
    name: "{{ item }}"
    persistent: yes
    state: on
  with_items:
    - httpd_can_network_connect

- name: user {{ httpd_www_local_user }} exists
  user:
    name: "{{ httpd_www_local_user }}"
    state: present
    groups: wwwpush

- name: Wrapper tool to build website
  template:
    src: www/centos_website.j2
    dest: /usr/libexec/centos/centos_website
    mode: 0750
    owner: "{{ httpd_www_local_user }}"
  register: centos_website_script
  tags:
    - script

- name: Init podman containers
  command: /usr/libexec/centos/centos_website init
  when: centos_website_script is changed
  become_user: "{{ httpd_www_local_user }}"
  tags:
    - script

- name: Cron to compare upstream git
  cron:
    name: Build website from git
    job: /usr/libexec/centos/centos_website build
    minute: "*/2"
    user: "{{ httpd_www_local_user }}"
  tags:
    - cron

- name: Cron to refresh external content for website
  cron:
    name: Refreshing csv files for website
    job: /usr/libexec/centos/centos_website refresh
    minute: "25"
    user: "{{ httpd_www_local_user }}"
  tags:
    - cron

- block: 
    - name: Configuring agent in Zabbix server
      include_role:
        name: zabbix-server
        tasks_from: agent_config
      vars:
        zabbix_templates: "{{ httpd_stg_zabbix_templates }}"
        zabbix_groups: "{{ httpd_zabbix_groups }}"
  delegate_to: "{{ zabbix_api_srv }}"  
  tags:
    - monitoring
  when: zabbix_api_srv is defined and zabbix_api_srv != 'None'

