- import_role:
    name: podman-host
  vars:
    podman_rootless: True
    podman_rootless_users: "{{ httpd_docs_username | split(',') }}"
    
- import_role:
    name: httpd
    tasks_from: pki-tls
  vars:
    pki_hostname: "{{ httpd_docs_hostname }}"

- name: Configuring httpd vhost for people
  template:
    src: "docs/{{ item }}.j2"
    dest: "/etc/httpd/conf.d/{{ item }}"
    mode: 0644
  with_items:
    - 03_docs.conf
    - ssl-docs.conf
  notify:
    - restart_httpd

- name: Ensuring we have a docroot
  file:
    path: "/var/www/{{ httpd_docs_hostname }}"
    state: directory
    owner: "{{ httpd_docs_username }}"
    group: "{{ httpd_docs_username }}"

- block:
    - name: Ensuring needed pkgs are installed
      yum:
        name: "{{ httpd_docs_pkgs_list }}"
        state: installed

    - name: Needed script to call mkdocs container
      template:
        src: docs/mkdocs-centos.j2
        dest: /usr/libexec/centos/mkdocs-centos
        mode: '0755'  

    - name: Init git and podman 
      command: 
        cmd: "/usr/libexec/centos/mkdocs-centos init"
        creates: "/home/{{ httpd_docs_username }}/git"
      become_user: "{{ httpd_docs_username }}"

    - name: Cron to compare upstream git
      cron:
        name: mkdocs-centos render job
        job: "/usr/libexec/centos/mkdocs-centos build"
        minute: "*/2"
        user: "{{ httpd_docs_username }}"
    
  tags:
    - mkdocs

- name: Enabling needed selinux booleans
  seboolean:
    name: "{{ item }}"
    persistent: yes
    state: on
  with_items:
    - httpd_can_network_connect

- name: Ensuring backup user and jobs
  include_role:
    name: centos-backup
    tasks_from: client
  vars:
    - centos_role: httpd-doc
    - role_backup_folders:
        - "/var/www/{{ httpd_docs_hostname }}"
  tags:
    - backup
   
