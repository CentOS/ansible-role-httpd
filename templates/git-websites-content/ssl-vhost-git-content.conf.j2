<VirtualHost *:80>
   DocumentRoot {{ item.local_dir }}
   ServerName {{ item.hostname }}
   CustomLog logs/{{ item.hostname }}_access.log combined
   ErrorLog logs/{{ item.hostname }}_error.log
   # Some needed headers
   Header always set X-Frame-Options "SAMEORIGIN"
   Header always set X-Xss-Protection "1; mode=block"
   Header always set X-Content-Type-Options "nosniff"
   Header always set Referrer-Policy "same-origin"

   RewriteEngine On
   RewriteCond $1 !^.well-known
   RewriteCond %{HTTPS} !=on
   RewriteRule ^/?(.*) https://{{ item.hostname }}/$1 [R,L]


</VirtualHost>
<VirtualHost *:443>
 ServerAdmin webmaster@centos.org
 ServerName {{ item.hostname }}
 DocumentRoot {{ item.local_dir }}

 Header always set Strict-Transport-Security "max-age=31536000"  
 Header always set X-Frame-Options "SAMEORIGIN"
 Header always set X-Xss-Protection "1; mode=block"
 Header always set X-Content-Type-Options "nosniff"
 Header always set Referrer-Policy "same-origin"

 # Allow Cross-Origin Resource Sharing (CORS) in centos.org domain to reuse
 # common resources like CSS, fonts, etc. Thanks so much to Fabian (arrfab) for
 # this pretty clever solution to beat CORS limitations.
 SetEnvIf Origin "^http(s)?://(.+\.)?(centos\.org)$" origin_is=$0
 Header always set Access-Control-Allow-Origin %{origin_is}e env=origin_is

RewriteEngine on
{% if item.rewrite_rules is defined %}
{{ item.rewrite_rules }}
{% endif %}

ErrorLog logs/ssl-{{ item.hostname }}_error.log
TransferLog logs/ssl-{{ item.hostname }}_access.log
LogLevel warn
SSLEngine on
{{ httpd_tls_ciphers }}

SSLCertificateFile /etc/pki/tls/certs/{{ item.hostname }}.crt
SSLCertificateKeyFile /etc/pki/tls/private/{{ item.hostname }}.key
SSLCertificateChainFile /etc/pki/tls/certs/{{ item.hostname }}-CAChain.crt

<Files ~ "\.(cgi|shtml|phtml|php3?)$">
    SSLOptions +StdEnvVars
</Files>
<Directory "/var/www/cgi-bin">
    SSLOptions +StdEnvVars
</Directory>
SetEnvIf User-Agent ".*MSIE.*" \
         nokeepalive ssl-unclean-shutdown \
         downgrade-1.0 force-response-1.0
CustomLog logs/ssl-{{ item.hostname }}_request.log \
          "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"
</VirtualHost>                               

